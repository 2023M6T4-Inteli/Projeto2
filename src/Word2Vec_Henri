{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyM5h4lSkgZQuDWZICzcc9Zf"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"euxBMIiOIGMO","executionInfo":{"status":"ok","timestamp":1685299073011,"user_tz":180,"elapsed":2360,"user":{"displayName":"Henri Harari","userId":"03303551645752857870"}}},"outputs":[],"source":["import gensim\n","from gensim.models import word2vec\n","from gensim.models.word2vec import Word2Vec\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import pandas as pd\n","import requests\n","\n","\n"]},{"cell_type":"code","source":["# Fornecer o caminho correto para o arquivo CSV\n","df = pd.read_csv('/content/lematizacao.csv', error_bad_lines=False)\n","df.head()\n","\n","import gensim.downloader as api\n","print(list(gensim.downloader.info()['models'].keys()))\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GSSnn7UzIojW","executionInfo":{"status":"ok","timestamp":1685299217444,"user_tz":180,"elapsed":395,"user":{"displayName":"Henri Harari","userId":"03303551645752857870"}},"outputId":"eb591a5b-12b9-401f-f1d3-3c6b526557ab"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-2-ae84d42903ce>:2: FutureWarning: The error_bad_lines argument has been deprecated and will be removed in a future version. Use on_bad_lines in the future.\n","\n","\n","  df = pd.read_csv('/content/lematizacao.csv', error_bad_lines=False)\n","Skipping line 1580: expected 5 fields, saw 13\n","Skipping line 3092: expected 5 fields, saw 7\n","Skipping line 5498: expected 5 fields, saw 86\n","\n"]},{"output_type":"stream","name":"stdout","text":["['fasttext-wiki-news-subwords-300', 'conceptnet-numberbatch-17-06-300', 'word2vec-ruscorpora-300', 'word2vec-google-news-300', 'glove-wiki-gigaword-50', 'glove-wiki-gigaword-100', 'glove-wiki-gigaword-200', 'glove-wiki-gigaword-300', 'glove-twitter-25', 'glove-twitter-50', 'glove-twitter-100', 'glove-twitter-200', '__testing_word2vec-matrix-synopsis']\n"]}]},{"cell_type":"code","source":["# Carregar o modelo Word2Vec pré-treinado\n","wv = api.load('word2vec-google-news-300')\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"L4VRBg1oR_zQ","executionInfo":{"status":"ok","timestamp":1685299688520,"user_tz":180,"elapsed":466609,"user":{"displayName":"Henri Harari","userId":"03303551645752857870"}},"outputId":"894f5bf7-00da-4515-9846-c98902522fd4"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["[==================================================] 100.0% 1662.8/1662.8MB downloaded\n"]}]},{"cell_type":"code","source":["def sent_vec(sent):\n","    #Tamanho do vetor\n","    vector_size = wv.vector_size\n","    #número de elementos no vetor\n","    wv_res = np.zeros(vector_size)\n","    print(wv_res)\n","    ctr = 1\n","    #Condição para verificar se as palavras estão no word2vec, se sim é adicionada\n","    for w in sent:\n","        if w in wv:\n","            ctr += 1\n","            wv_res += wv[w]\n","    #Realiza a média. Caso queira outros resultados, mude a conta\n","    wv_res = wv_res/ctr\n","\n","    return wv_res"],"metadata":{"id":"YfSKjhyyKvLJ","executionInfo":{"status":"ok","timestamp":1685301398017,"user_tz":180,"elapsed":614,"user":{"displayName":"Henri Harari","userId":"03303551645752857870"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["teste = ['cachorro', 'gato', 'rodrigo']\n","sent_vec(teste)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"y0bInpAXNHd-","executionInfo":{"status":"ok","timestamp":1685301400783,"user_tz":180,"elapsed":517,"user":{"displayName":"Henri Harari","userId":"03303551645752857870"}},"outputId":"9b8f59c3-fcad-405a-c60e-af492edae5d2"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\n"]},{"output_type":"execute_result","data":{"text/plain":["array([ 1.77001953e-02,  7.35473633e-03,  2.83203125e-02,  8.64257812e-02,\n","       -1.75476074e-03,  1.56250000e-02, -5.72204590e-04, -1.22070312e-02,\n","       -4.68750000e-02,  6.62231445e-03,  4.00390625e-02, -1.22070312e-01,\n","       -6.03027344e-02,  3.32031250e-02, -4.37011719e-02,  4.73632812e-02,\n","        7.42187500e-02,  1.21582031e-01,  6.07299805e-03,  4.39453125e-02,\n","        5.49316406e-02, -7.91015625e-02,  5.68847656e-02,  3.83300781e-02,\n","       -4.39453125e-02, -1.11816406e-01, -9.61914062e-02,  6.34765625e-02,\n","       -2.05078125e-02, -1.23901367e-02,  2.68554688e-02,  4.83398438e-02,\n","        9.81445312e-02,  2.94189453e-02, -6.73828125e-02, -4.80957031e-02,\n","       -2.73437500e-02,  3.00292969e-02,  4.66308594e-02, -3.88183594e-02,\n","       -1.47705078e-02, -5.61523438e-02,  9.32617188e-02,  1.94091797e-02,\n","       -1.09252930e-02, -4.19921875e-02, -3.34472656e-02, -2.41699219e-02,\n","       -3.14941406e-02,  2.35595703e-02, -1.43554688e-01,  5.32226562e-02,\n","        7.03125000e-02, -2.29492188e-02, -4.10156250e-02,  7.51953125e-02,\n","        2.17285156e-02, -6.49414062e-02, -5.49316406e-03,  3.49121094e-02,\n","       -2.74658203e-02,  7.81250000e-02,  1.74560547e-02,  1.11694336e-02,\n","        2.08740234e-02, -1.86523438e-01,  7.50732422e-03, -7.91015625e-02,\n","       -9.03320312e-02,  2.41699219e-02,  9.08203125e-02,  9.76562500e-02,\n","       -6.44531250e-02,  2.36511230e-03, -6.88476562e-02,  1.89208984e-02,\n","        1.75781250e-02,  1.40380859e-02, -7.26318359e-03,  8.23974609e-03,\n","       -1.51977539e-02,  4.54101562e-02, -9.53674316e-04, -9.76562500e-02,\n","       -7.91015625e-02,  1.03515625e-01, -2.69775391e-02,  9.52148438e-02,\n","        3.90625000e-03, -6.64062500e-02, -7.71484375e-02, -8.11767578e-03,\n","       -1.16210938e-01, -2.27050781e-02, -1.95312500e-02,  3.80859375e-02,\n","       -2.27050781e-02, -2.24609375e-02,  7.03125000e-02,  2.76184082e-03,\n","       -1.07910156e-01,  5.02929688e-02, -1.94091797e-02, -3.95507812e-02,\n","       -4.54101562e-02, -3.29589844e-02,  2.42919922e-02, -2.14843750e-02,\n","       -4.61425781e-02, -1.90429688e-02, -2.39257812e-02, -1.48315430e-02,\n","        7.81250000e-02, -2.78320312e-02, -5.85937500e-02,  2.56347656e-03,\n","       -7.47070312e-02, -1.21093750e-01, -3.68652344e-02, -7.61718750e-02,\n","        6.64062500e-02, -3.78417969e-02, -1.52343750e-01, -3.66210938e-02,\n","        1.00585938e-01,  9.03320312e-03, -1.09863281e-01,  7.27539062e-02,\n","        7.27539062e-02, -2.57568359e-02, -7.61718750e-02,  1.98974609e-02,\n","       -2.27355957e-03,  1.77001953e-02, -9.66796875e-02,  5.76171875e-02,\n","       -6.93359375e-02, -4.00390625e-02,  1.17675781e-01,  3.61328125e-02,\n","       -1.12915039e-02, -1.07421875e-01, -1.10351562e-01,  7.14111328e-03,\n","       -1.43432617e-02,  5.83496094e-02, -8.05664062e-02,  1.06933594e-01,\n","       -1.46484375e-02, -9.47265625e-02,  7.56835938e-02, -1.23046875e-01,\n","       -1.45507812e-01,  7.32421875e-02, -1.02539062e-02, -5.24902344e-02,\n","       -9.47265625e-02,  1.95312500e-01, -5.27343750e-02,  3.05175781e-02,\n","       -2.57568359e-02,  1.77001953e-02, -3.95507812e-02,  3.93066406e-02,\n","        4.30297852e-03, -6.59179688e-02,  5.02929688e-02, -9.66796875e-02,\n","       -5.39550781e-02, -4.80957031e-02, -1.05957031e-01,  5.90820312e-02,\n","       -8.11767578e-03,  6.07910156e-02, -2.72216797e-02,  8.34960938e-02,\n","        5.95703125e-02, -4.05273438e-02, -5.58471680e-03,  4.51660156e-02,\n","       -4.37011719e-02, -6.17675781e-02, -3.97949219e-02, -4.66308594e-02,\n","        2.35595703e-02, -5.39550781e-02, -3.61328125e-02, -2.05078125e-02,\n","        1.11083984e-02,  6.00585938e-02, -2.25830078e-02,  2.23388672e-02,\n","       -2.69775391e-02,  2.44140625e-02,  3.39355469e-02,  6.03027344e-02,\n","       -7.81250000e-02, -4.10156250e-02, -5.73730469e-02,  2.08740234e-02,\n","        1.92642212e-04,  2.05078125e-02, -6.88476562e-02, -1.14746094e-01,\n","        1.03759766e-02, -5.88378906e-02,  2.25830078e-02,  3.17382812e-02,\n","       -2.79235840e-03,  1.36718750e-02, -3.86047363e-03, -7.44628906e-03,\n","       -9.81445312e-02,  7.72094727e-03,  4.68750000e-02,  7.86132812e-02,\n","       -2.74658203e-03, -8.69140625e-02, -1.19628906e-01, -3.63769531e-02,\n","        1.70898438e-02,  7.27539062e-02,  1.78222656e-02,  5.56640625e-02,\n","        1.34887695e-02,  1.75781250e-02,  5.44433594e-02,  7.12890625e-02,\n","        4.83398438e-02,  1.87988281e-02, -3.97949219e-02, -5.83496094e-02,\n","       -8.64257812e-02,  9.91210938e-02,  3.12500000e-02, -1.42822266e-02,\n","        7.81250000e-02,  3.19824219e-02, -2.23388672e-02, -6.13403320e-03,\n","        6.71386719e-03, -1.11694336e-02,  1.69677734e-02,  6.83593750e-02,\n","        6.03027344e-02,  3.49121094e-02, -2.07519531e-03,  7.42187500e-02,\n","       -5.22460938e-02, -7.44628906e-03,  5.79833984e-03,  5.05371094e-02,\n","        5.58471680e-03,  1.01074219e-01,  9.22851562e-02, -1.16699219e-01,\n","       -7.95898438e-02, -4.71191406e-02, -3.24707031e-02,  1.85546875e-02,\n","        8.78906250e-03,  7.47070312e-02, -7.99560547e-03, -7.42187500e-02,\n","        9.42230225e-04, -8.00781250e-02, -2.96630859e-02, -1.26953125e-02,\n","       -1.33666992e-02, -4.41894531e-02, -1.09863281e-01,  7.32421875e-03,\n","       -2.81982422e-02, -8.91113281e-03,  7.71484375e-02,  4.68750000e-02,\n","       -1.06933594e-01,  8.77380371e-04, -7.81250000e-03,  7.86132812e-02,\n","       -5.92041016e-03,  3.19824219e-02, -3.14941406e-02,  4.80957031e-02,\n","       -2.80761719e-03, -3.75976562e-02,  2.77099609e-02,  1.05957031e-01,\n","       -6.44531250e-02, -1.59912109e-02, -1.19018555e-02,  2.24609375e-02,\n","       -1.77001953e-02,  2.00195312e-02,  4.00390625e-02,  6.43920898e-03,\n","       -7.65991211e-03,  7.76367188e-02, -1.19628906e-02,  5.95703125e-02])"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["wv.similarity(\"woman\", \"man\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9xAM8DWxNOFF","executionInfo":{"status":"ok","timestamp":1685301421816,"user_tz":180,"elapsed":456,"user":{"displayName":"Henri Harari","userId":"03303551645752857870"}},"outputId":"8980cb98-6ab8-40b1-8c59-78685bdf5a32"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.76640123"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["sent_vec('man')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cUqOO5loUTYq","executionInfo":{"status":"ok","timestamp":1685301424230,"user_tz":180,"elapsed":6,"user":{"displayName":"Henri Harari","userId":"03303551645752857870"}},"outputId":"46e3669c-9079-45a3-f623-2ffcf3523aaa"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\n"]},{"output_type":"execute_result","data":{"text/plain":["array([-5.57657878e-02,  4.72412109e-02, -3.40169271e-02,  1.02864583e-01,\n","       -5.30598958e-02,  3.14534505e-02, -7.79622396e-02,  5.15950521e-02,\n","       -4.98046875e-02,  9.99348958e-02, -4.12209829e-02,  4.26432292e-02,\n","       -7.84098307e-02,  6.38834635e-03, -2.27864583e-02,  8.18684896e-02,\n","        5.85937500e-03,  8.88671875e-02, -1.44205729e-01, -7.24283854e-03,\n","       -1.92545573e-01,  2.99631755e-02,  4.61018880e-02, -8.51236979e-02,\n","       -5.27343750e-02, -1.69270833e-02, -2.35026042e-01,  1.06567383e-01,\n","       -1.41601562e-02, -3.41796875e-02,  1.17187500e-02, -2.34705607e-02,\n","        4.27246094e-03, -1.03678385e-01, -1.00667318e-01,  1.08398438e-01,\n","       -9.40755208e-02,  8.21940104e-02,  6.02213542e-03,  2.60416667e-02,\n","        3.33658854e-02, -6.15234375e-02,  8.30891927e-02,  1.45833333e-01,\n","        3.48917643e-02, -1.03352865e-02, -9.79817708e-02, -1.09863281e-01,\n","       -6.34765625e-02,  9.13492839e-02, -6.39648438e-02,  1.17187500e-01,\n","        2.60416667e-02,  1.67317708e-01,  3.19010417e-02,  6.29069010e-02,\n","       -9.50520833e-02,  1.31429036e-02, -4.01204427e-02, -9.17968750e-02,\n","       -1.32161458e-01, -8.23567708e-02, -2.93782552e-02,  8.30078125e-03,\n","        1.87784831e-02, -1.33463542e-01, -4.44335938e-02,  1.65690104e-01,\n","        3.73535156e-02, -2.65299479e-02, -3.54817708e-02, -7.38118490e-02,\n","        8.49609375e-02, -8.30078125e-03, -6.54805501e-02, -2.11588542e-02,\n","        6.90714518e-02, -6.87357585e-02, -8.28450521e-02, -3.44645182e-02,\n","       -1.97753906e-02, -5.40974935e-02,  3.70279948e-02,  4.02832031e-02,\n","        9.04947917e-02,  1.24674479e-01, -1.20442708e-02,  1.34765625e-01,\n","        2.05485026e-02,  2.29492188e-02, -3.51562500e-02,  1.01888021e-01,\n","       -1.96940104e-02, -7.95898438e-02, -8.82161458e-02,  5.01302083e-02,\n","       -6.59179688e-02, -3.74348958e-03,  1.71875000e-01, -5.33040365e-02,\n","       -1.14095052e-01, -7.97526042e-03, -9.61914062e-02, -1.44856771e-02,\n","       -9.76562500e-03,  1.59179688e-01, -3.92252604e-02, -6.20930990e-02,\n","       -2.78320312e-02,  4.05273438e-02, -7.16145833e-02,  1.01725260e-02,\n","        1.36067708e-01, -7.07194010e-02,  1.81274414e-02,  1.48437500e-01,\n","        1.78385417e-01,  4.19514974e-02, -3.81164551e-02, -2.37630208e-02,\n","        1.88598633e-02,  6.09537760e-02,  4.01204427e-02,  7.04752604e-02,\n","        4.94791667e-02, -1.34765625e-01,  1.90429688e-02,  4.58170573e-02,\n","        3.77604167e-02,  7.69856771e-02, -7.01497396e-02,  9.27734375e-02,\n","        7.23266602e-03, -2.58789062e-02, -1.33138021e-01,  4.68750000e-02,\n","        5.36295573e-02, -1.07421875e-02,  1.80338542e-01,  1.66178385e-01,\n","        5.36295573e-02, -6.02213542e-02,  1.01521810e-02,  1.52994792e-02,\n","       -9.71679688e-02, -5.28971354e-02, -4.98046875e-02,  4.67936198e-02,\n","       -5.68033854e-02, -7.10550944e-03,  3.82080078e-02, -1.99218750e-01,\n","        5.32226562e-02, -9.96093750e-02, -1.03027344e-01, -5.02929688e-02,\n","        9.71679688e-02,  1.60481771e-01,  7.34049479e-02, -2.84016927e-02,\n","        2.76692708e-02,  1.95312500e-02,  9.42382812e-02, -3.07617188e-02,\n","        1.03190104e-01,  2.08943685e-02,  7.96712240e-02, -2.68707275e-02,\n","       -1.38346354e-03,  3.87980143e-02, -9.30786133e-02, -1.20442708e-02,\n","        3.05989583e-02, -1.20442708e-01, -2.12809245e-02,  1.06119792e-01,\n","        1.55598958e-01, -6.96614583e-02,  2.03043620e-02, -3.58072917e-02,\n","       -2.09960938e-02,  5.08219401e-02, -4.16666667e-02, -5.61523438e-02,\n","       -6.33951823e-02, -3.55072021e-02,  1.33463542e-02,  8.47981771e-02,\n","        6.99869792e-03,  9.44010417e-03,  8.19295247e-02, -9.06575521e-02,\n","       -1.21093750e-01,  6.50634766e-02, -6.02213542e-03,  5.41381836e-02,\n","        3.72721354e-02,  9.52148438e-03, -3.03802490e-02,  3.71907552e-02,\n","       -3.96931966e-02, -6.04654948e-02, -1.20117188e-01, -6.67317708e-02,\n","       -3.82486979e-03, -1.42415365e-04, -7.61718750e-02,  2.96427409e-02,\n","       -2.31933594e-02,  1.43880208e-01,  4.29484049e-02,  1.01725260e-01,\n","       -3.34472656e-02,  4.18294271e-02, -5.31005859e-02,  4.15039062e-02,\n","        6.65690104e-02, -8.87044271e-02, -4.06087240e-02,  1.84326172e-02,\n","       -1.23697917e-01,  9.99348958e-02,  4.66715495e-02, -2.11995443e-02,\n","        3.05989583e-02,  3.17382812e-02,  4.88484701e-02,  8.95182292e-03,\n","       -6.09938304e-02, -9.39534505e-02,  6.75455729e-03,  7.73111979e-03,\n","       -1.49088542e-01,  2.27050781e-02, -5.43619792e-02, -2.92154948e-02,\n","       -9.44010417e-03,  9.16341146e-02,  9.86328125e-02,  6.21744792e-02,\n","        6.55924479e-02,  8.85416667e-02,  2.41210938e-01, -8.98437500e-02,\n","       -1.25325521e-02,  3.36608887e-02, -1.52994792e-01,  1.01562500e-01,\n","        1.71712240e-02, -1.02701823e-01,  1.06852214e-01, -2.09554036e-02,\n","        1.78629557e-02,  1.12792969e-01,  5.50130208e-02, -6.44531250e-02,\n","        4.47591146e-03,  2.69775391e-02,  2.80253092e-02, -7.48697917e-03,\n","        1.16861979e-01, -3.86555990e-02, -1.68457031e-02, -3.84928385e-02,\n","       -9.34244792e-02,  8.07291667e-02,  1.37939453e-02,  2.84830729e-02,\n","        9.92838542e-03,  1.08235677e-02, -1.20279948e-01, -2.03450521e-03,\n","       -2.63671875e-02,  1.43229167e-02,  1.05143229e-01, -5.08626302e-02,\n","       -1.05468750e-01, -1.40950521e-01, -3.43424479e-02, -6.32731120e-03,\n","       -2.56347656e-02,  1.42903646e-01, -3.73942057e-02,  2.97444661e-02,\n","       -2.93782552e-02, -1.62760417e-03, -6.87662760e-02, -4.14428711e-02,\n","        4.29687500e-02, -9.97924805e-03,  4.58577474e-02,  1.81070964e-02,\n","       -6.87662760e-02,  1.51774089e-02, -9.24479167e-02, -1.07747396e-01,\n","       -2.38037109e-02,  2.54720052e-02, -9.47265625e-02, -6.20524089e-02])"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["teste = df['tokens'].iloc[0]"],"metadata":{"id":"nnsjLFISUj5-","executionInfo":{"status":"ok","timestamp":1685301428122,"user_tz":180,"elapsed":450,"user":{"displayName":"Henri Harari","userId":"03303551645752857870"}}},"execution_count":9,"outputs":[]},{"cell_type":"code","source":["sent_vec(teste)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sTlhMKBOUkEY","executionInfo":{"status":"ok","timestamp":1685301430698,"user_tz":180,"elapsed":492,"user":{"displayName":"Henri Harari","userId":"03303551645752857870"}},"outputId":"2b3a3d94-fe4e-4c2f-ade3-88977d9a6207"},"execution_count":10,"outputs":[{"output_type":"stream","name":"stdout","text":["[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n"," 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\n"]},{"output_type":"execute_result","data":{"text/plain":["array([-1.51480682e-01,  9.83746219e-02,  6.96840842e-03,  1.41753101e-01,\n","       -5.16799904e-02,  2.52629324e-02, -7.59222604e-02, -4.40462167e-02,\n","       -3.08534996e-02,  2.58523573e-02, -6.03066004e-02, -7.96746908e-02,\n","       -1.98949703e-01,  3.13892963e-02, -1.22853825e-01,  7.57423481e-02,\n","        1.17032631e-01,  1.80947069e-01, -3.07452739e-02,  7.40838158e-04,\n","       -2.61241782e-01, -3.43265049e-02,  1.20183993e-01,  1.34772741e-02,\n","       -7.49922041e-02,  2.13686012e-02, -2.70425149e-01,  6.44480501e-02,\n","       -4.44421697e-02, -1.54662995e-02, -1.66679120e-02,  2.73759554e-02,\n","       -8.31374552e-02, -1.22722403e-01, -1.43787698e-01,  9.81555933e-02,\n","       -2.15305072e-01,  1.30125676e-01, -5.81146890e-02,  8.96264320e-02,\n","       -3.31055052e-02, -5.27537165e-02,  6.59634942e-02,  9.75350008e-02,\n","        4.25337006e-02, -3.23885674e-02, -2.41272931e-02, -1.95281116e-01,\n","       -1.23276692e-01,  8.19990446e-02, -1.76039076e-01,  2.33703522e-01,\n","       -2.62431101e-02,  2.26764856e-01,  4.53174631e-02,  1.16420957e-01,\n","       -1.48808273e-01, -8.97114615e-02, -2.15694045e-03, -1.57341882e-01,\n","       -1.48389694e-01, -8.06564536e-02, -1.80236725e-01, -4.98417439e-02,\n","       -4.49503854e-02, -1.94043033e-01, -8.86045949e-02,  1.26348065e-01,\n","       -3.45207180e-02,  3.57394140e-02,  3.13888801e-02, -7.98312702e-02,\n","        3.52566068e-02, -2.24345710e-02, -3.71340194e-02, -1.62057919e-02,\n","        1.34795361e-01,  5.06746894e-03,  1.26657073e-02, -8.47098631e-02,\n","       -1.39411413e-01, -1.81200971e-02, -2.58045909e-02,  3.96007772e-03,\n","        1.33996892e-01,  6.32442366e-02, -1.97500277e-02,  2.35844223e-01,\n","        1.17960475e-02,  5.65087015e-02,  2.23783256e-02,  4.64188329e-02,\n","       -1.74663413e-02, -1.01876411e-01,  3.63946524e-02,  1.11985051e-01,\n","       -9.34693660e-02,  9.92292053e-02,  2.50124442e-01, -2.19257623e-02,\n","       -6.47797406e-02, -2.28434792e-03, -5.69920561e-02, -1.22455318e-02,\n","       -6.05336005e-02,  1.38839197e-01, -6.93692035e-02,  5.51070597e-02,\n","       -1.37806252e-02,  2.58606596e-02, -1.40678189e-01, -1.64868182e-01,\n","       -4.99284912e-02, -4.46066179e-02,  7.41688795e-02,  1.55779783e-01,\n","        8.62178774e-02, -3.40590313e-02, -1.30921665e-02, -4.38742075e-02,\n","        1.15474319e-01,  7.72621143e-02, -3.69020927e-03,  2.23830242e-02,\n","        1.10816488e-01, -1.65959163e-01, -1.11646895e-01, -6.00005693e-03,\n","        5.75180282e-02,  1.00213842e-01, -8.25080358e-02, -3.69531378e-02,\n","       -7.56838675e-02, -5.13065720e-02, -1.63673207e-01,  6.55164277e-02,\n","       -4.68880920e-02,  3.03539054e-02,  2.33027847e-01,  1.42287364e-01,\n","        1.98839493e-01, -5.81027146e-02,  7.09442002e-02, -3.42800329e-02,\n","       -6.61259809e-02, -8.39882923e-02, -5.94829109e-02,  1.42894522e-01,\n","       -4.29842597e-02,  4.18974644e-02,  7.14945202e-02, -2.90833888e-01,\n","       -5.40664855e-02, -5.67315847e-02, -1.15003668e-01, -9.43568847e-02,\n","        5.75334096e-02,  1.79882557e-01, -2.49894717e-02, -2.80514932e-02,\n","        2.43203088e-02,  8.15328418e-02, -1.61939316e-03, -3.03034077e-03,\n","       -1.28071533e-02, -3.34772586e-02,  1.68059755e-01,  3.23968269e-02,\n","       -1.03845023e-01,  9.57833192e-02, -1.21608398e-01, -9.04568386e-02,\n","       -2.68763612e-02, -6.86275100e-02, -3.52404584e-02,  2.25702043e-01,\n","        2.61194340e-01, -1.85136598e-01,  1.84682125e-02, -8.49392696e-02,\n","        3.33960994e-04,  1.19871929e-02,  4.02897662e-02, -5.24687033e-02,\n","       -3.10068629e-02,  7.61503439e-02, -3.35762697e-02,  8.38551885e-02,\n","       -1.61034280e-02,  3.47769015e-02,  1.10904893e-01, -5.21123456e-02,\n","       -2.47514072e-01, -1.20008437e-02,  1.18981696e-01,  4.56968116e-02,\n","       -5.96858368e-02, -1.40590240e-02,  7.01033930e-02, -1.10349373e-01,\n","       -9.00815043e-02,  2.98123438e-02, -1.96925917e-01, -1.38889983e-01,\n","        5.73009725e-02, -7.22424517e-02, -3.86704700e-02,  1.03596275e-01,\n","       -2.91162328e-02,  1.64425244e-01,  1.32237159e-01,  1.02972860e-01,\n","       -1.30181596e-01,  1.80136733e-02, -8.34431784e-02,  3.68298472e-02,\n","        1.49770603e-01, -8.01612786e-02, -1.49067147e-01, -2.05092722e-04,\n","       -1.28485846e-01,  1.38641084e-01,  8.22744783e-02, -1.38221592e-02,\n","       -3.80288254e-03, -7.43977500e-02,  5.91306473e-02,  7.22814996e-02,\n","        5.15606799e-03, -1.31608812e-01,  3.19614382e-02, -3.81389669e-02,\n","       -8.09921527e-02,  1.63791354e-03,  1.47780802e-02,  1.44358237e-02,\n","        5.33767495e-02,  9.67606543e-02,  9.79684108e-02,  9.86011089e-02,\n","        8.83333808e-02,  9.14334011e-02,  2.63436493e-01, -6.93180558e-02,\n","       -2.36146297e-02,  8.73306799e-02, -1.60486606e-01,  1.46433102e-01,\n","        3.63297400e-02, -7.80230923e-02,  8.41283670e-02,  3.38586371e-02,\n","        5.36224411e-02,  9.39836032e-02, -8.77373529e-03, -1.11379512e-01,\n","       -2.41514471e-02,  6.33499305e-02,  3.16752846e-02, -7.17049500e-02,\n","        7.18191287e-02, -1.55936214e-02,  9.86065373e-02, -2.25064174e-02,\n","       -1.00962458e-01,  3.76644847e-02,  1.17438392e-02,  5.41867198e-03,\n","       -1.03976673e-02, -6.95498342e-02, -8.88095280e-02, -6.02614969e-03,\n","        3.45289290e-02,  2.82308125e-02,  9.02097785e-02, -7.86585330e-02,\n","       -1.75037150e-01, -1.41676556e-01, -9.27228942e-02,  8.38196074e-02,\n","       -9.58252523e-02,  1.66383478e-01, -4.77912572e-03,  1.96220273e-04,\n","        6.72207820e-04,  6.12856832e-02,  1.13079259e-03, -2.20803117e-03,\n","       -4.59932860e-02, -3.24354870e-02,  7.49752233e-02, -1.31724633e-02,\n","       -1.08802738e-01,  1.00118640e-01, -3.48194162e-02, -1.62698492e-01,\n","       -1.04231807e-01, -1.80751647e-02, -1.03611426e-01,  1.32322485e-01])"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["def sent_vec(tokens):\n","    # Aqui você pode implementar a lógica para calcular o vetor representativo de um texto\n","    # com base nos seus tokens\n","    # Exemplo fictício para demonstração:\n","    return np.zeros(300)  # Retorna um vetor de zeros com tamanho 300\n","\n","# Após definir a função sent_vec, você pode usá-la na linha:\n","df['vec'] = df['tokens'].apply(sent_vec)"],"metadata":{"id":"poEixfbcUq0k","executionInfo":{"status":"ok","timestamp":1685301435859,"user_tz":180,"elapsed":415,"user":{"displayName":"Henri Harari","userId":"03303551645752857870"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":354},"id":"KDvRadP5UraT","executionInfo":{"status":"ok","timestamp":1685301438762,"user_tz":180,"elapsed":505,"user":{"displayName":"Henri Harari","userId":"03303551645752857870"}},"outputId":"7a3b2219-1a38-4825-d969-d1c38f2377e0"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Unnamed: 0          autor  \\\n","0           0     v8_capital   \n","1           1  winthegame_of   \n","2           2     marta_bego   \n","3           3     lmviapiana   \n","4           4   vanilson_dos   \n","\n","                                               texto sentimento  \\\n","0  Confira os resultados dos nossos fundos no mês...    NEUTRAL   \n","1  A Alvarez & Marsal estará conosco no Sportainm...    NEUTRAL   \n","2  #Repost btgpactual with make_repost ・・・ Entend...    NEUTRAL   \n","3                               Minuto touro de ouro   POSITIVE   \n","4                                   @ricktolledo Sim    NEUTRAL   \n","\n","                                              tokens  \\\n","0  ['confira', 'o', 'resultado', 'de o', 'nosso',...   \n","1  ['Alvarez', 'Marsal', 'estara', 'conosco', 'sp...   \n","2  ['repost', 'btg', 'With', 'makerepost', 'enten...   \n","3                        ['minuto', 'touro', 'ouro']   \n","4                             ['Ricktolledo', 'sim']   \n","\n","                                                 vec  \n","0  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...  \n","1  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...  \n","2  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...  \n","3  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...  \n","4  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...  "],"text/html":["\n","  <div id=\"df-a189f47f-ea27-4d30-b2dd-3e2177d6347f\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>autor</th>\n","      <th>texto</th>\n","      <th>sentimento</th>\n","      <th>tokens</th>\n","      <th>vec</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>v8_capital</td>\n","      <td>Confira os resultados dos nossos fundos no mês...</td>\n","      <td>NEUTRAL</td>\n","      <td>['confira', 'o', 'resultado', 'de o', 'nosso',...</td>\n","      <td>[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>winthegame_of</td>\n","      <td>A Alvarez &amp; Marsal estará conosco no Sportainm...</td>\n","      <td>NEUTRAL</td>\n","      <td>['Alvarez', 'Marsal', 'estara', 'conosco', 'sp...</td>\n","      <td>[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>marta_bego</td>\n","      <td>#Repost btgpactual with make_repost ・・・ Entend...</td>\n","      <td>NEUTRAL</td>\n","      <td>['repost', 'btg', 'With', 'makerepost', 'enten...</td>\n","      <td>[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>lmviapiana</td>\n","      <td>Minuto touro de ouro</td>\n","      <td>POSITIVE</td>\n","      <td>['minuto', 'touro', 'ouro']</td>\n","      <td>[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>vanilson_dos</td>\n","      <td>@ricktolledo Sim</td>\n","      <td>NEUTRAL</td>\n","      <td>['Ricktolledo', 'sim']</td>\n","      <td>[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a189f47f-ea27-4d30-b2dd-3e2177d6347f')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-a189f47f-ea27-4d30-b2dd-3e2177d6347f button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-a189f47f-ea27-4d30-b2dd-3e2177d6347f');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["df['sentimento'] = df['sentimento'].map({'NEUTRAL': 0, 'POSITIVE': 1, 'NEGATIVE': -1})"],"metadata":{"id":"RDS-sNgXUrc_","executionInfo":{"status":"ok","timestamp":1685301442599,"user_tz":180,"elapsed":3,"user":{"displayName":"Henri Harari","userId":"03303551645752857870"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":354},"id":"vwJn-BGOUrgT","executionInfo":{"status":"ok","timestamp":1685301445499,"user_tz":180,"elapsed":389,"user":{"displayName":"Henri Harari","userId":"03303551645752857870"}},"outputId":"f95afd3b-c240-412b-ccb7-1075e0352dc5"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Unnamed: 0          autor  \\\n","0           0     v8_capital   \n","1           1  winthegame_of   \n","2           2     marta_bego   \n","3           3     lmviapiana   \n","4           4   vanilson_dos   \n","\n","                                               texto  sentimento  \\\n","0  Confira os resultados dos nossos fundos no mês...           0   \n","1  A Alvarez & Marsal estará conosco no Sportainm...           0   \n","2  #Repost btgpactual with make_repost ・・・ Entend...           0   \n","3                               Minuto touro de ouro           1   \n","4                                   @ricktolledo Sim           0   \n","\n","                                              tokens  \\\n","0  ['confira', 'o', 'resultado', 'de o', 'nosso',...   \n","1  ['Alvarez', 'Marsal', 'estara', 'conosco', 'sp...   \n","2  ['repost', 'btg', 'With', 'makerepost', 'enten...   \n","3                        ['minuto', 'touro', 'ouro']   \n","4                             ['Ricktolledo', 'sim']   \n","\n","                                                 vec  \n","0  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...  \n","1  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...  \n","2  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...  \n","3  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...  \n","4  [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...  "],"text/html":["\n","  <div id=\"df-84a1bd53-5626-4ca0-9f6f-0fbaf61af25d\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>autor</th>\n","      <th>texto</th>\n","      <th>sentimento</th>\n","      <th>tokens</th>\n","      <th>vec</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>v8_capital</td>\n","      <td>Confira os resultados dos nossos fundos no mês...</td>\n","      <td>0</td>\n","      <td>['confira', 'o', 'resultado', 'de o', 'nosso',...</td>\n","      <td>[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>winthegame_of</td>\n","      <td>A Alvarez &amp; Marsal estará conosco no Sportainm...</td>\n","      <td>0</td>\n","      <td>['Alvarez', 'Marsal', 'estara', 'conosco', 'sp...</td>\n","      <td>[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>marta_bego</td>\n","      <td>#Repost btgpactual with make_repost ・・・ Entend...</td>\n","      <td>0</td>\n","      <td>['repost', 'btg', 'With', 'makerepost', 'enten...</td>\n","      <td>[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>lmviapiana</td>\n","      <td>Minuto touro de ouro</td>\n","      <td>1</td>\n","      <td>['minuto', 'touro', 'ouro']</td>\n","      <td>[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>vanilson_dos</td>\n","      <td>@ricktolledo Sim</td>\n","      <td>0</td>\n","      <td>['Ricktolledo', 'sim']</td>\n","      <td>[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-84a1bd53-5626-4ca0-9f6f-0fbaf61af25d')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-84a1bd53-5626-4ca0-9f6f-0fbaf61af25d button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-84a1bd53-5626-4ca0-9f6f-0fbaf61af25d');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["len(df['vec'].iloc[0])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"y0ExPRHrUriK","executionInfo":{"status":"ok","timestamp":1685301451165,"user_tz":180,"elapsed":614,"user":{"displayName":"Henri Harari","userId":"03303551645752857870"}},"outputId":"b49fa432-b131-4073-c8ac-42732e0a5357"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["300"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["X = df['vec'].to_list()\n","y = df['sentimento'].to_list()"],"metadata":{"id":"SDxQv-6_UrqQ","executionInfo":{"status":"ok","timestamp":1685301453930,"user_tz":180,"elapsed":619,"user":{"displayName":"Henri Harari","userId":"03303551645752857870"}}},"execution_count":16,"outputs":[]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2,stratify=y)\n","from sklearn.model_selection import GridSearchCV\n","from sklearn.linear_model import LogisticRegression\n","\n","# Defina os hiperparâmetros que você deseja testar\n","parameters = {\n","    'C': [0.1, 1.0, 10.0],\n","    'penalty': ['l1', 'l2'],\n","    'solver': ['liblinear', 'newton-cg', 'lbfgs'],\n","    'max_iter': [100, 500, 1000],\n","    'class_weight': [None, 'balanced'],\n","    'multi_class': ['ovr', 'multinomial']\n","}\n","\n","# Crie o classificador de regressão logística\n","classifier = LogisticRegression()\n","\n","# Crie o objeto GridSearchCV\n","grid_search = GridSearchCV(classifier, parameters)\n","\n","# Aplique o GridSearchCV aos dados de treinamento\n","grid_search.fit(X_train, y_train)\n","\n","# Exiba os melhores parâmetros encontrados\n","print(\"Melhores parâmetros:\", grid_search.best_params_)\n","\n","# Exiba a melhor pontuação do modelo\n","print(\"Melhor pontuação:\", grid_search.best_score_)\n","\n","# Use o modelo com os melhores parâmetros para fazer previsões nos dados de teste\n","best_classifier = grid_search.best_estimator_\n","predictions = best_classifier.predict(X_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_I3uNm_eUrs-","executionInfo":{"status":"ok","timestamp":1685301544264,"user_tz":180,"elapsed":86044,"user":{"displayName":"Henri Harari","userId":"03303551645752857870"}},"outputId":"935f2157-543f-4f6e-e383-6f1e02cb6c99"},"execution_count":17,"outputs":[{"output_type":"stream","name":"stdout","text":["Melhores parâmetros: {'C': 0.1, 'class_weight': None, 'max_iter': 100, 'multi_class': 'ovr', 'penalty': 'l1', 'solver': 'liblinear'}\n","Melhor pontuação: 0.42775200337410374\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py:378: FitFailedWarning: \n","540 fits failed out of a total of 1080.\n","The score on these train-test partitions for these parameters will be set to nan.\n","If these failures are not expected, you can try to debug them by setting error_score='raise'.\n","\n","Below are more details about the failures:\n","--------------------------------------------------------------------------------\n","180 fits failed with the following error:\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py\", line 686, in _fit_and_score\n","    estimator.fit(X_train, y_train, **fit_params)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py\", line 1162, in fit\n","    solver = _check_solver(self.solver, self.penalty, self.dual)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py\", line 54, in _check_solver\n","    raise ValueError(\n","ValueError: Solver newton-cg supports only 'l2' or 'none' penalties, got l1 penalty.\n","\n","--------------------------------------------------------------------------------\n","180 fits failed with the following error:\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py\", line 686, in _fit_and_score\n","    estimator.fit(X_train, y_train, **fit_params)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py\", line 1162, in fit\n","    solver = _check_solver(self.solver, self.penalty, self.dual)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py\", line 54, in _check_solver\n","    raise ValueError(\n","ValueError: Solver lbfgs supports only 'l2' or 'none' penalties, got l1 penalty.\n","\n","--------------------------------------------------------------------------------\n","180 fits failed with the following error:\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py\", line 686, in _fit_and_score\n","    estimator.fit(X_train, y_train, **fit_params)\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py\", line 1207, in fit\n","    multi_class = _check_multi_class(self.multi_class, solver, len(self.classes_))\n","  File \"/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py\", line 90, in _check_multi_class\n","    raise ValueError(\"Solver %s does not support a multinomial backend.\" % solver)\n","ValueError: Solver liblinear does not support a multinomial backend.\n","\n","  warnings.warn(some_fits_failed_message, FitFailedWarning)\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_search.py:952: UserWarning: One or more of the test scores are non-finite: [0.427752          nan        nan 0.427752   0.427752   0.427752\n","        nan        nan        nan        nan 0.427752   0.427752\n"," 0.427752          nan        nan 0.427752   0.427752   0.427752\n","        nan        nan        nan        nan 0.427752   0.427752\n"," 0.427752          nan        nan 0.427752   0.427752   0.427752\n","        nan        nan        nan        nan 0.427752   0.427752\n"," 0.427752          nan        nan 0.427752   0.20666385 0.20666385\n","        nan        nan        nan        nan 0.20666385 0.20666385\n"," 0.427752          nan        nan 0.427752   0.20666385 0.20666385\n","        nan        nan        nan        nan 0.20666385 0.20666385\n"," 0.427752          nan        nan 0.427752   0.20666385 0.20666385\n","        nan        nan        nan        nan 0.20666385 0.20666385\n"," 0.427752          nan        nan 0.427752   0.427752   0.427752\n","        nan        nan        nan        nan 0.427752   0.427752\n"," 0.427752          nan        nan 0.427752   0.427752   0.427752\n","        nan        nan        nan        nan 0.427752   0.427752\n"," 0.427752          nan        nan 0.427752   0.427752   0.427752\n","        nan        nan        nan        nan 0.427752   0.427752\n"," 0.427752          nan        nan 0.427752   0.20666385 0.20666385\n","        nan        nan        nan        nan 0.20666385 0.20666385\n"," 0.427752          nan        nan 0.427752   0.20666385 0.20666385\n","        nan        nan        nan        nan 0.20666385 0.20666385\n"," 0.427752          nan        nan 0.427752   0.20666385 0.20666385\n","        nan        nan        nan        nan 0.20666385 0.20666385\n"," 0.427752          nan        nan 0.427752   0.427752   0.427752\n","        nan        nan        nan        nan 0.427752   0.427752\n"," 0.427752          nan        nan 0.427752   0.427752   0.427752\n","        nan        nan        nan        nan 0.427752   0.427752\n"," 0.427752          nan        nan 0.427752   0.427752   0.427752\n","        nan        nan        nan        nan 0.427752   0.427752\n"," 0.427752          nan        nan 0.427752   0.20666385 0.20666385\n","        nan        nan        nan        nan 0.20666385 0.20666385\n"," 0.427752          nan        nan 0.427752   0.20666385 0.20666385\n","        nan        nan        nan        nan 0.20666385 0.20666385\n"," 0.427752          nan        nan 0.427752   0.20666385 0.20666385\n","        nan        nan        nan        nan 0.20666385 0.20666385]\n","  warnings.warn(\n"]}]},{"cell_type":"code","source":["from sklearn import metrics\n","predicted = best_classifier.predict(X_test)\n","print(\"Logistic Regression Accuracy:\",metrics.accuracy_score(y_test, predicted, ))\n","print(\"Logistic Regression Precision:\",metrics.precision_score(y_test, predicted, average='macro'))\n","print(\"Logistic Regression Recall:\",metrics.recall_score(y_test, predicted, average='macro'))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NG3WnsL6Urv8","executionInfo":{"status":"ok","timestamp":1685301600760,"user_tz":180,"elapsed":396,"user":{"displayName":"Henri Harari","userId":"03303551645752857870"}},"outputId":"a3377e09-2dde-4460-8c21-ecb034664f1f"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["Logistic Regression Accuracy: 0.42780026990553305\n","Logistic Regression Precision: 0.142600089968511\n","Logistic Regression Recall: 0.3333333333333333\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]}]},{"cell_type":"code","source":["!pip install spacy \n","import spacy\n","!python -m spacy download pt_core_news_sm\n","\n","\n","# Carregar o modelo de linguagem em português\n","nlp = spacy.load(\"pt_core_news_sm\")\n","\n","# Criar uma lista de sentenças tokenizadas\n","sentences = [nlp(row) for row in df['tokens']]\n","\n","# Treinar o modelo Word2Vec\n","model = spacy.models.Word2Vec(sentences, vector_size=100, window=5, min_count=1, workers=4)\n","\n","# Exemplo de uso do modelo\n","# Obter o vetor de palavra para uma palavra específica\n","word = 'exemplo'\n","word_vector = model.get_vector(word)\n","\n","# Exibir o vetor de palavra\n","print(f'Vetor de palavra para \"{word}\": {word_vector}')\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tE9aIbOj0ozi","outputId":"7f0843fd-0566-4dec-cfde-79b51069f37c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: spacy in /usr/local/lib/python3.10/dist-packages (3.5.2)\n","Requirement already satisfied: spacy-legacy<3.1.0,>=3.0.11 in /usr/local/lib/python3.10/dist-packages (from spacy) (3.0.12)\n","Requirement already satisfied: spacy-loggers<2.0.0,>=1.0.0 in /usr/local/lib/python3.10/dist-packages (from spacy) (1.0.4)\n","Requirement already satisfied: murmurhash<1.1.0,>=0.28.0 in /usr/local/lib/python3.10/dist-packages (from spacy) (1.0.9)\n","Requirement already satisfied: cymem<2.1.0,>=2.0.2 in /usr/local/lib/python3.10/dist-packages (from spacy) (2.0.7)\n","Requirement already satisfied: preshed<3.1.0,>=3.0.2 in /usr/local/lib/python3.10/dist-packages (from spacy) (3.0.8)\n","Requirement already satisfied: thinc<8.2.0,>=8.1.8 in /usr/local/lib/python3.10/dist-packages (from spacy) (8.1.9)\n","Requirement already satisfied: wasabi<1.2.0,>=0.9.1 in /usr/local/lib/python3.10/dist-packages (from spacy) (1.1.1)\n","Requirement already satisfied: srsly<3.0.0,>=2.4.3 in /usr/local/lib/python3.10/dist-packages (from spacy) (2.4.6)\n","Requirement already satisfied: catalogue<2.1.0,>=2.0.6 in /usr/local/lib/python3.10/dist-packages (from spacy) (2.0.8)\n","Requirement already satisfied: typer<0.8.0,>=0.3.0 in /usr/local/lib/python3.10/dist-packages (from spacy) (0.7.0)\n","Requirement already satisfied: pathy>=0.10.0 in /usr/local/lib/python3.10/dist-packages (from spacy) (0.10.1)\n","Requirement already satisfied: smart-open<7.0.0,>=5.2.1 in /usr/local/lib/python3.10/dist-packages (from spacy) (6.3.0)\n","Requirement already satisfied: tqdm<5.0.0,>=4.38.0 in /usr/local/lib/python3.10/dist-packages (from spacy) (4.65.0)\n","Requirement already satisfied: numpy>=1.15.0 in /usr/local/lib/python3.10/dist-packages (from spacy) (1.22.4)\n","Requirement already satisfied: requests<3.0.0,>=2.13.0 in /usr/local/lib/python3.10/dist-packages (from spacy) (2.27.1)\n","Requirement already satisfied: pydantic!=1.8,!=1.8.1,<1.11.0,>=1.7.4 in /usr/local/lib/python3.10/dist-packages (from spacy) (1.10.7)\n","Requirement already satisfied: jinja2 in /usr/local/lib/python3.10/dist-packages (from spacy) (3.1.2)\n","Requirement already satisfied: setuptools in /usr/local/lib/python3.10/dist-packages (from spacy) (67.7.2)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from spacy) (23.1)\n","Requirement already satisfied: langcodes<4.0.0,>=3.2.0 in /usr/local/lib/python3.10/dist-packages (from spacy) (3.3.0)\n","Requirement already satisfied: typing-extensions>=4.2.0 in /usr/local/lib/python3.10/dist-packages (from pydantic!=1.8,!=1.8.1,<1.11.0,>=1.7.4->spacy) (4.5.0)\n","Requirement already satisfied: urllib3<1.27,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests<3.0.0,>=2.13.0->spacy) (1.26.15)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests<3.0.0,>=2.13.0->spacy) (2022.12.7)\n","Requirement already satisfied: charset-normalizer~=2.0.0 in /usr/local/lib/python3.10/dist-packages (from requests<3.0.0,>=2.13.0->spacy) (2.0.12)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests<3.0.0,>=2.13.0->spacy) (3.4)\n","Requirement already satisfied: blis<0.8.0,>=0.7.8 in /usr/local/lib/python3.10/dist-packages (from thinc<8.2.0,>=8.1.8->spacy) (0.7.9)\n","Requirement already satisfied: confection<1.0.0,>=0.0.1 in /usr/local/lib/python3.10/dist-packages (from thinc<8.2.0,>=8.1.8->spacy) (0.0.4)\n","Requirement already satisfied: click<9.0.0,>=7.1.1 in /usr/local/lib/python3.10/dist-packages (from typer<0.8.0,>=0.3.0->spacy) (8.1.3)\n","Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.10/dist-packages (from jinja2->spacy) (2.1.2)\n","2023-05-28 20:19:10.012090: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT\n","Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Collecting pt-core-news-sm==3.5.0\n","  Downloading https://github.com/explosion/spacy-models/releases/download/pt_core_news_sm-3.5.0/pt_core_news_sm-3.5.0-py3-none-any.whl (13.0 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m13.0/13.0 MB\u001b[0m \u001b[31m14.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: spacy<3.6.0,>=3.5.0 in /usr/local/lib/python3.10/dist-packages (from pt-core-news-sm==3.5.0) (3.5.2)\n","Requirement already satisfied: spacy-legacy<3.1.0,>=3.0.11 in /usr/local/lib/python3.10/dist-packages (from spacy<3.6.0,>=3.5.0->pt-core-news-sm==3.5.0) (3.0.12)\n","Requirement already satisfied: spacy-loggers<2.0.0,>=1.0.0 in /usr/local/lib/python3.10/dist-packages (from spacy<3.6.0,>=3.5.0->pt-core-news-sm==3.5.0) (1.0.4)\n","Requirement already satisfied: murmurhash<1.1.0,>=0.28.0 in /usr/local/lib/python3.10/dist-packages (from spacy<3.6.0,>=3.5.0->pt-core-news-sm==3.5.0) (1.0.9)\n","Requirement already satisfied: cymem<2.1.0,>=2.0.2 in /usr/local/lib/python3.10/dist-packages (from spacy<3.6.0,>=3.5.0->pt-core-news-sm==3.5.0) (2.0.7)\n","Requirement already satisfied: preshed<3.1.0,>=3.0.2 in /usr/local/lib/python3.10/dist-packages (from spacy<3.6.0,>=3.5.0->pt-core-news-sm==3.5.0) (3.0.8)\n","Requirement already satisfied: thinc<8.2.0,>=8.1.8 in /usr/local/lib/python3.10/dist-packages (from spacy<3.6.0,>=3.5.0->pt-core-news-sm==3.5.0) (8.1.9)\n","Requirement already satisfied: wasabi<1.2.0,>=0.9.1 in /usr/local/lib/python3.10/dist-packages (from spacy<3.6.0,>=3.5.0->pt-core-news-sm==3.5.0) (1.1.1)\n","Requirement already satisfied: srsly<3.0.0,>=2.4.3 in /usr/local/lib/python3.10/dist-packages (from spacy<3.6.0,>=3.5.0->pt-core-news-sm==3.5.0) (2.4.6)\n","Requirement already satisfied: catalogue<2.1.0,>=2.0.6 in /usr/local/lib/python3.10/dist-packages (from spacy<3.6.0,>=3.5.0->pt-core-news-sm==3.5.0) (2.0.8)\n","Requirement already satisfied: typer<0.8.0,>=0.3.0 in /usr/local/lib/python3.10/dist-packages (from spacy<3.6.0,>=3.5.0->pt-core-news-sm==3.5.0) (0.7.0)\n","Requirement already satisfied: pathy>=0.10.0 in /usr/local/lib/python3.10/dist-packages (from spacy<3.6.0,>=3.5.0->pt-core-news-sm==3.5.0) (0.10.1)\n","Requirement already satisfied: smart-open<7.0.0,>=5.2.1 in /usr/local/lib/python3.10/dist-packages (from spacy<3.6.0,>=3.5.0->pt-core-news-sm==3.5.0) (6.3.0)\n","Requirement already satisfied: tqdm<5.0.0,>=4.38.0 in /usr/local/lib/python3.10/dist-packages (from spacy<3.6.0,>=3.5.0->pt-core-news-sm==3.5.0) (4.65.0)\n","Requirement already satisfied: numpy>=1.15.0 in /usr/local/lib/python3.10/dist-packages (from spacy<3.6.0,>=3.5.0->pt-core-news-sm==3.5.0) (1.22.4)\n","Requirement already satisfied: requests<3.0.0,>=2.13.0 in /usr/local/lib/python3.10/dist-packages (from spacy<3.6.0,>=3.5.0->pt-core-news-sm==3.5.0) (2.27.1)\n","Requirement already satisfied: pydantic!=1.8,!=1.8.1,<1.11.0,>=1.7.4 in /usr/local/lib/python3.10/dist-packages (from spacy<3.6.0,>=3.5.0->pt-core-news-sm==3.5.0) (1.10.7)\n","Requirement already satisfied: jinja2 in /usr/local/lib/python3.10/dist-packages (from spacy<3.6.0,>=3.5.0->pt-core-news-sm==3.5.0) (3.1.2)\n","Requirement already satisfied: setuptools in /usr/local/lib/python3.10/dist-packages (from spacy<3.6.0,>=3.5.0->pt-core-news-sm==3.5.0) (67.7.2)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from spacy<3.6.0,>=3.5.0->pt-core-news-sm==3.5.0) (23.1)\n","Requirement already satisfied: langcodes<4.0.0,>=3.2.0 in /usr/local/lib/python3.10/dist-packages (from spacy<3.6.0,>=3.5.0->pt-core-news-sm==3.5.0) (3.3.0)\n","Requirement already satisfied: typing-extensions>=4.2.0 in /usr/local/lib/python3.10/dist-packages (from pydantic!=1.8,!=1.8.1,<1.11.0,>=1.7.4->spacy<3.6.0,>=3.5.0->pt-core-news-sm==3.5.0) (4.5.0)\n","Requirement already satisfied: urllib3<1.27,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests<3.0.0,>=2.13.0->spacy<3.6.0,>=3.5.0->pt-core-news-sm==3.5.0) (1.26.15)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests<3.0.0,>=2.13.0->spacy<3.6.0,>=3.5.0->pt-core-news-sm==3.5.0) (2022.12.7)\n","Requirement already satisfied: charset-normalizer~=2.0.0 in /usr/local/lib/python3.10/dist-packages (from requests<3.0.0,>=2.13.0->spacy<3.6.0,>=3.5.0->pt-core-news-sm==3.5.0) (2.0.12)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests<3.0.0,>=2.13.0->spacy<3.6.0,>=3.5.0->pt-core-news-sm==3.5.0) (3.4)\n","Requirement already satisfied: blis<0.8.0,>=0.7.8 in /usr/local/lib/python3.10/dist-packages (from thinc<8.2.0,>=8.1.8->spacy<3.6.0,>=3.5.0->pt-core-news-sm==3.5.0) (0.7.9)\n","Requirement already satisfied: confection<1.0.0,>=0.0.1 in /usr/local/lib/python3.10/dist-packages (from thinc<8.2.0,>=8.1.8->spacy<3.6.0,>=3.5.0->pt-core-news-sm==3.5.0) (0.0.4)\n","Requirement already satisfied: click<9.0.0,>=7.1.1 in /usr/local/lib/python3.10/dist-packages (from typer<0.8.0,>=0.3.0->spacy<3.6.0,>=3.5.0->pt-core-news-sm==3.5.0) (8.1.3)\n","Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.10/dist-packages (from jinja2->spacy<3.6.0,>=3.5.0->pt-core-news-sm==3.5.0) (2.1.2)\n","\u001b[38;5;2m✔ Download and installation successful\u001b[0m\n","You can now load the package via spacy.load('pt_core_news_sm')\n"]}]}]}